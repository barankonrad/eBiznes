{
	"info": {
		"_postman_id": "d4d0bfee-6db4-44e7-be23-7a1f7cbf9894",
		"name": "Zad 6. API testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44838189"
	},
	"item": [
		{
			"name": "Category",
			"item": [
				{
					"name": "01 ‑ create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// generate new category id once",
									"if (!pm.environment.get('categoryId')) {",
									"  pm.environment.set('categoryId', Math.floor(Math.random()*90000)+10000);",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{categoryId}},\n  \"name\": \"Test Category\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/category",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "02 ‑ getById",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));",
									"const json = pm.response.json();",
									"pm.test('Correct id returned', () => pm.expect(json.id).to.eql(parseInt(pm.environment.get('categoryId'))));"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/category?id={{categoryId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category"
							],
							"query": [
								{
									"key": "id",
									"value": "{{categoryId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "03 ‑ update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{categoryId}},\n  \"name\": \"Updated Category Name\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/category",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "04 ‑ getAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));",
									"pm.test('List contains newly added category', () => {",
									"  pm.expect(pm.response.json().some(c => c.id === parseInt(pm.environment.get('categoryId')))).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "05 ‑ delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/category?id={{categoryId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category"
							],
							"query": [
								{
									"key": "id",
									"value": "{{categoryId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "06 ‑ getById-should404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 404', () => pm.response.to.have.status(404));"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/category?id={{categoryId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category"
							],
							"query": [
								{
									"key": "id",
									"value": "{{categoryId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "07 ‑ create-invalidJson",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 400', () => pm.response.to.have.status(400));"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"foo\": \"bar\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/category",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "08 ‑ update-invalidJson",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 400', () => pm.response.to.have.status(400));"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"not-an-int\",\n  \"name\": 123\n}"
						},
						"url": {
							"raw": "{{base_url}}/category",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "01 ‑ create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (!pm.environment.get('productId')) {",
									"  pm.environment.set('productId', Math.floor(Math.random()*90000)+10000);",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{productId}},\n  \"name\": \"Wireless Headphones\",\n  \"price\": 99.99,\n  \"categoryId\": {{categoryId}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/item",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"item"
							]
						}
					},
					"response": []
				},
				{
					"name": "02 ‑ getById",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));",
									"const json = pm.response.json();",
									"pm.test('Proper id', () => pm.expect(json.id).to.eql(parseInt(pm.environment.get('productId'))));"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/item?id={{productId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"item"
							],
							"query": [
								{
									"key": "id",
									"value": "{{productId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "03 ‑ update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{productId}},\n  \"name\": \"Wireless Headphones Pro\",\n  \"price\": 149.99,\n  \"categoryId\": {{categoryId}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/item",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"item"
							]
						}
					},
					"response": []
				},
				{
					"name": "04 ‑ getAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));",
									"pm.test('Product present in list', () => {",
									"  pm.expect(pm.response.json().some(p => p.id === parseInt(pm.environment.get('productId')))).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/items",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "05 ‑ delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/item?id={{productId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"item"
							],
							"query": [
								{
									"key": "id",
									"value": "{{productId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "06 ‑ getById-should404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 404', () => pm.response.to.have.status(404));"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/item?id={{productId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"item"
							],
							"query": [
								{
									"key": "id",
									"value": "{{productId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "05 ‑ getById-should404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 404', () => pm.response.to.have.status(404));"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/item?id=999999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"item"
							],
							"query": [
								{
									"key": "id",
									"value": "999999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "06 ‑ create-invalidJson",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 400', () => pm.response.to.have.status(400));"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Incomplete Product\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/item",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"item"
							]
						}
					},
					"response": []
				},
				{
					"name": "07 ‑ update-invalidJson",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 400', () => pm.response.to.have.status(400));"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{productId}},\n  \"name\": true,\n  \"price\": \"not-a-number\",\n  \"categoryId\": \"abc\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/item",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"item"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cart",
			"item": [
				{
					"name": "01 ‑ addItem",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (!pm.environment.get('cartItemId')) {",
									"  pm.environment.set('cartItemId', pm.environment.get('productId')); // reuse product id",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{cartItemId}},\n  \"quantity\": 2\n}"
						},
						"url": {
							"raw": "{{base_url}}/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart"
							]
						}
					},
					"response": []
				},
				{
					"name": "02 ‑ getAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));",
									"pm.test('Item present', () => {",
									"  pm.expect(pm.response.json().some(c => c.id === parseInt(pm.environment.get('cartItemId')))).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cartItems",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cartItems"
							]
						}
					},
					"response": []
				},
				{
					"name": "03 ‑ updateQty",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cart?id={{cartItemId}}&quantity=3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart"
							],
							"query": [
								{
									"key": "id",
									"value": "{{cartItemId}}"
								},
								{
									"key": "quantity",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "04 ‑ deleteItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cart?id={{cartItemId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart"
							],
							"query": [
								{
									"key": "id",
									"value": "{{cartItemId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "05 ‑ getAll-shouldNotContain",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));",
									"pm.test('Item removed', () => {",
									"  pm.expect(pm.response.json().some(c => c.id === parseInt(pm.environment.get('cartItemId')))).to.be.false;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cartItems",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cartItems"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:9000"
		},
		{
			"key": "categoryId",
			"value": ""
		},
		{
			"key": "productId",
			"value": ""
		},
		{
			"key": "cartItemId",
			"value": ""
		}
	]
}